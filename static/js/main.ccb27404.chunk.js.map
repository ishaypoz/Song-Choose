{"version":3,"sources":["component/SongList.js","actions/index.js","component/SongDetail.js","component/App.js","reducers/index.js","index.js"],"names":["SongList","this","props","songs","map","song","className","key","title","onClick","selectSong","renderList","React","Component","connect","state","type","payload","selectedSong","duration","App","combineReducers","selectedSongReducer","action","ReactDom","render","store","createStore","reducers","document","getElementById"],"mappings":"yNAIMA,E,2KACS,IAAD,OACZ,OAAOC,KAAKC,MAAMC,MAAMC,KAAI,SAACC,GAC5B,OACC,yBAAKC,UAAU,OAAOC,IAAKF,EAAKG,OAC/B,yBAAKF,UAAU,yBACd,4BAAQA,UAAU,oBAAoBG,QAAS,kBAAM,EAAKP,MAAMQ,WAAWL,KAA3E,WAID,yBAAKC,UAAU,WAAWD,EAAKG,a,+BAOlC,OAAO,yBAAKF,UAAU,mBAAmBL,KAAKU,kB,GAjBzBC,IAAMC,WA2BdC,eANS,SAACC,GAGxB,MAAO,CAAEZ,MAAOY,EAAMZ,SAGiB,CAAEO,WC/BhB,SAACL,GAC1B,MAAO,CACNW,KAAM,gBACNC,QAASZ,KD4BIS,CAAqDd,GETrDc,eAHS,SAACC,GACxB,MAAO,CAAEV,KAAMU,EAAMG,gBAEPJ,EAnBI,SAAC,GAAc,IAAZT,EAAW,EAAXA,KACrB,OAAKA,EAAKG,MAIT,6BACC,6CACA,qCACSH,EAAKG,MACb,6BAFD,aAGYH,EAAKc,WARX,iDCaMC,EAdH,WACX,OACC,yBAAKd,UAAU,qBACd,yBAAKA,UAAU,UACd,yBAAKA,UAAU,qBACd,kBAAC,EAAD,OAED,yBAAKA,UAAU,qBACd,kBAAC,EAAD,UCKUe,cAAgB,CAC9BlB,MAhBoB,WACpB,MAAO,CACN,CAAEK,MAAO,YAAaW,SAAU,QAChC,CAAEX,MAAO,WAAYW,SAAU,QAC/B,CAAEX,MAAO,WAAYW,SAAU,QAC/B,CAAEX,MAAO,qBAAsBW,SAAU,UAY1CD,aAT2B,SAAtBI,IAAwD,IAAZC,EAAW,uCAC5D,MAAoB,kBAAhBA,EAAOP,KACHO,EAAON,QAERK,KCPRE,IAASC,OACR,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,IAC5B,kBAAC,EAAD,OAEDC,SAASC,eAAe,W","file":"static/js/main.ccb27404.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectSong } from '../actions';\r\n\r\nclass SongList extends React.Component {\r\n\trenderList() {\r\n\t\treturn this.props.songs.map((song) => {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"item\" key={song.title}>\r\n\t\t\t\t\t<div className=\"right floated content\">\r\n\t\t\t\t\t\t<button className=\"ui button primary\" onClick={() => this.props.selectSong(song)}>\r\n\t\t\t\t\t\t\tSelect\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"content\">{song.title}</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\trender() {\r\n\t\t//this is this class so we dont need arrow funtion to bind it\r\n\t\treturn <div className=\"ui divided list\">{this.renderList()}</div>;\r\n\t}\r\n}\r\n//take all the data from the provider, the redux store\r\nconst mapStateToProps = (state) => {\r\n\t// every time update the redux store this function will run\r\n\t//state have all the data in store\r\n\treturn { songs: state.songs }; //when its equal to inside the SongList class this.props === { songs:state.songs }\r\n};\r\n//we give the connect the function that we want it to use to return the redux store\r\nexport default connect(mapStateToProps, { selectSong: selectSong })(SongList); //connect return a function and the other (SongList) applay it to the function\r\n//the selectSong the connect will pass it as props after we imported it cqn use only selectSong\r\n//the connect alos will wrap the action in other dispatch functoin that will update the store\r\n","export const selectSong = (song) => {\r\n\treturn {\r\n\t\ttype: 'SONG_SELECTED',\r\n\t\tpayload: song\r\n\t};\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SongDetail = ({ song }) => {\r\n\tif (!song.title) {\r\n\t\treturn <div>Select a Song</div>;\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h3>Deatails for:</h3>\r\n\t\t\t<p>\r\n\t\t\t\tTitle: {song.title}\r\n\t\t\t\t<br />\r\n\t\t\t\tDuration: {song.duration}\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn { song: state.selectedSong };\r\n};\r\nexport default connect(mapStateToProps)(SongDetail);\r\n","import React from 'react';\r\nimport SongList from './SongList';\r\nimport SongDetail from './SongDetail';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<div className=\"ui container grid\">\r\n\t\t\t<div className=\"ui row\">\r\n\t\t\t\t<div className=\"column eight wide\">\r\n\t\t\t\t\t<SongList />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"column eight wide\">\r\n\t\t\t\t\t<SongDetail />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\n\r\nconst songsReducer = () => {\r\n\treturn [\r\n\t\t{ title: 'No Scrubs', duration: '4:05' },\r\n\t\t{ title: 'Macarena', duration: '2:30' },\r\n\t\t{ title: 'All Star', duration: '3:15' },\r\n\t\t{ title: 'I Want it That Way', duration: '1:45' }\r\n\t];\r\n};\r\nconst selectedSongReducer = (SelectedSong = null, action) => {\r\n\tif (action.type === 'SONG_SELECTED') {\r\n\t\treturn action.payload;\r\n\t}\r\n\treturn selectedSongReducer;\r\n};\r\n\r\nexport default combineReducers({\r\n\tsongs: songsReducer,\r\n\tselectedSong: selectedSongReducer\r\n});\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport { Provider } from 'react-redux'; //component from react-refux lib\r\nimport { createStore } from 'redux';\r\nimport App from './component/App';\r\nimport reducers from './reducers';\r\n\r\nReactDom.render(\r\n\t<Provider store={createStore(reducers)}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}